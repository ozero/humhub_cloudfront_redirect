#  myhumhub.example.com

# port 80: http
server {
  listen 80;
  listen [::]:80;

  server_name myhumhub.example.com;

  location ^~ /.well-known/acme-challenge/ {
    default_type "text/plain";
    root          /opt/www/myhumhub.example.com/docs;
  }

  location / {
    # Redirect all HTTP requests to HTTPS with a 301 Moved Permanently response.
    return 301 https://$server_name:443$request_uri;
  }
}

# port 443: https with letsencrypt
server {

  # General setting
  listen 443 ssl;
  listen [::]:443 ssl;

  root /opt/www/myhumhub.example.com/docs;
  server_name myhumhub.example.com;
  
  ssl_protocols TLSv1.3 TLSv1.2;
  ssl_certificate /etc/letsencrypt/live/myhumhub.example.com/fullchain.pem;
  ssl_certificate_key  /etc/letsencrypt/live/myhumhub.example.com/privkey.pem;

  charset utf-8;
  client_max_body_size 256M;

  access_log /var/log/nginx/my_humhub.access.log;
  error_log /var/log/nginx/my_humhub.error.log;

  # CDN redirect setting

  location /file/file/download {
      # CDN: preview-image
      if ($arg_variant = "preview-image"){
          # GET /file/file/download?variant=preview-image&guid=[GUID]&hash_sha1=[HASH]
          # /r.php?c=pv&g=$arg_guid
          return 302 /r.php?c=pv&g=$arg_guid;
      }

      # CDN: file
      # GET /file/file/download?guid=[GUID]&hash_sha1=[HASH]?filename=theme.css
      # /r.php?c=dl&g=$arg_guid
      return 302 /r.php?c=dl&g=$arg_guid&f=$arg_filename;
  }

  # CDN: profile_image
  location /uploads/profile_image {
      # GET /uploads/profile_image/[GUID].jpg?m=[DIGITS]
      # /r.php?c=pf&g=$1&e=$2
      rewrite ^/.*?profile_image\/([0-9a-f\-]+)(\.[a-z]+).*?$ /r.php?c=pf&g=$1&e=$2 last;
  }

  # CDN: profile_image/banner
  location /uploads {
      # GET /uploads/profile_image/banner/[GUID].jpg?m=[DIGITS]
      # /r.php?c=pb&g=$1&e=$2
      rewrite ^/.*?profile_image\/banner\/([0-9a-f\-]+)(\.[a-z]+).*?$ /r.php?c=pb&g=$1&e=$2 last;
  }

  # Humhub General
  location / {
      index index.php index.html;
      try_files $uri $uri/ /index.php?$args;
  }
  location ~ ^/(protected|framework|themes/\w+/views|\.|uploads/file) {
      deny all;
  }
  location ~ ^/(assets|static|themes) {
      expires 10d;
      add_header Cache-Control "public, no-transform";
  }

  location ~ \.php {
      fastcgi_split_path_info  ^(.+\.php)(.*)$;

      #let yii catch the calls to unexising PHP files
      set $fsn /index.php;
      if (-f $document_root$fastcgi_script_name){
              set $fsn $fastcgi_script_name;
      }

      fastcgi_pass unix:/var/run/php/php-fpm.sock;
      include fastcgi_params;
      fastcgi_param  SCRIPT_FILENAME  $document_root$fsn;
  }

  location = /favicon.ico {
    log_not_found off;
    access_log off;
  }

  location = /robots.txt {
    allow all;
    log_not_found off;
    access_log off;
  }

  # letsencrypt Certbot
  location ^~ /.well-known/acme-challenge/ {
    default_type "text/plain";
    root          /opt/www/myhumhub.example.com/docs;
    allow all;
  }

}
