# myhumhub.example.com

# port 80: http
server {
    listen 80;
    listen [::]:80;

    server_name myhumhub.example.com;

    location ^~ /.well-known/acme-challenge/ {
        default_type "text/plain";
        root          /opt/www/myhumhub.example.com/docs;
    }

    location / {
        # Redirect all HTTP requests to HTTPS with a 301 Moved Permanently response.
        return 301 https://$server_name:443$request_uri;
    }
}

# port 443: https with letsencrypt
server {

    # General setting
    listen 443 ssl;
    listen [::]:443 ssl;

    root /opt/www/myhumhub.example.com/docs;
    server_name myhumhub.example.com;
    
    ssl_protocols TLSv1.3 TLSv1.2;
    ssl_certificate /etc/letsencrypt/live/myhumhub.example.com/fullchain.pem;
    ssl_certificate_key  /etc/letsencrypt/live/myhumhub.example.com/privkey.pem;

    charset utf-8;
    client_max_body_size 256M;

    access_log /var/log/nginx/my_humhub.access.log;
    error_log /var/log/nginx/my_humhub.error.log;

    # CDN redirect setting
    # Assume your Humhub using Pretty URLs
    # https://docs.humhub.org/docs/admin/installation/#pretty-urls

    set $CDN_DOMAIN "MY.ALTERNAMTE-DOMAIN-NAME.COM";

    location /file/file/download {
        # rewrite & pathinfoでphpに引数渡してる系なので、rewrite使わずにこっちで対処

        # preview-image, Secured by signed-url
        if ($arg_variant = "preview-image"){
            # From: GET /file/file/download?variant=preview-image&guid=[GUID]&hash_sha1=089352a1
            # To: /r.php?c=pv&g=$arg_guid
            # On CDN: https://$CDN_DOMAIN/uploads/file/$guid_1/$guid_2/$arg_guid/preview-image;
            return 302 /r.php?c=pv&g=$arg_guid;
        }

        # file, Secured by signed-url
        # From: GET /file/file/download?guid=[GUID]&hash_sha1=089352a1?filename=theme.css
        # To: /r.php?c=dl&g=$arg_guid
        # On CDN: https://$CDN_DOMAIN/uploads/file/$guid_1/$guid_2/$arg_guid/file;
        return 302 /r.php?c=dl&g=$arg_guid&f=$arg_filename;
    }

    location /uploads/profile_image {
        # From: GET /uploads/profile_image/[GUID].jpg?m=1636446535
        # to: https://$CDN_DOMAIN/uploads/profile_image/[GUID].jpg
        rewrite ^/.*?profile_image\/([0-9a-f\-]+)(\.[a-z]+).*?$ https://$CDN_DOMAIN/uploads/profile_image/$1$2 break;
    }

    location /uploads {
        # From: GET /uploads/profile_image/banner/[GUID].jpg?m=1636446535
        # To: https://$CDN_DOMAIN/uploads/profile_image/banner/[GUID].jpg
        rewrite ^/.*?profile_image\/banner\/([0-9a-f\-]+)(\.[a-z]+).*?$ https://$CDN_DOMAIN/uploads/profile_image/banner/$1$2 break;
    }

    location /assets {
        # From: GET /assets/*/*.*
        # To: https://$CDN_DOMAIN/assets/*/*.*
        rewrite ^/assets/(.*?)$ https://$CDN_DOMAIN/assets/$1 break;
    }

    location /static {
        # From: GET /static/*/*.*
        # To: https://$CDN_DOMAIN/static/*/*.*
        rewrite ^/static/(.*?)$ https://$CDN_DOMAIN/static/$1 break;
    }

    location /themes {
        # From: GET /themes/*/*.*
        # To: https://$CDN_DOMAIN/themes/*/*.*
        rewrite ^/themes/(.*?)$ https://$CDN_DOMAIN/themes/$1 break;
    }

    # If any more url patterns you'd deal with, add patterns here.

    # Humhub General
    location / {
        index index.php index.html;
        try_files $uri $uri/ /index.php?$args;
    }
    location ~ ^/(protected|framework|themes/\w+/views|\.|uploads/file) {
        deny all;
    }
    location ~ ^/(assets|static|themes) {
        expires 10d;
        add_header Cache-Control "public, no-transform";
    }

    location ~ \.php {
        fastcgi_split_path_info  ^(.+\.php)(.*)$;

        #let yii catch the calls to unexising PHP files
        set $fsn /index.php;
        if (-f $document_root$fastcgi_script_name){
                set $fsn $fastcgi_script_name;
        }

        fastcgi_pass unix:/var/run/php/php-fpm.sock;
        include fastcgi_params;
        fastcgi_param  SCRIPT_FILENAME  $document_root$fsn;
    }

    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }

    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    # letsencrypt Certbot
    location ^~ /.well-known/acme-challenge/ {
        default_type "text/plain";
        root          /opt/www/myhumhub.example.com/docs;
        allow all;
    }

}
